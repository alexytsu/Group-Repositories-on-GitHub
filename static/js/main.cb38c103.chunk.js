(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{11:function(e,t,r){e.exports=r(24)},16:function(e,t,r){},19:function(e,t,r){},20:function(e,t,r){},21:function(e,t,r){},24:function(e,t,r){"use strict";r.r(t);var a=r(0),n=r.n(a),o=r(5),s=r.n(o),c=(r(16),r(1)),i=r.n(c),u=r(2),l=r(6),p=r(7),m=r(9),h=r(8),d=r(10);r(19),r(20);function f(e){var t=e.repo;return n.a.createElement("div",{className:"repository_row"},n.a.createElement("div",{className:"repository_name"},n.a.createElement("a",{href:t.html_url}," ",t.name)),n.a.createElement("div",{className:"repository_description"},n.a.createElement("a",{href:t.html_url},t.description)),n.a.createElement("div",{className:"repository_link"},n.a.createElement("a",{href:t.html_url},"Link")))}r(21);function v(e){var t=[];console.log("Props.repos",e.repos);for(var r=0;r<e.repos.length;r++){var a=e.repos[r];t.push(n.a.createElement(f,{repo:a}))}return n.a.createElement("div",{className:"card"},n.a.createElement("h2",null,"# ",e.name),t)}function g(e){return b.apply(this,arguments)}function b(){return(b=Object(u.a)(i.a.mark(function e(t){var r,a;return i.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,fetch("https://api.github.com/users/".concat(t,"/repos"),{headers:{Accept:"application/vnd.github.mercy-preview+json"}});case 2:return r=e.sent,e.next=5,r.json();case 5:return a=e.sent,e.abrupt("return",a);case 7:case"end":return e.stop()}},e)}))).apply(this,arguments)}var E=r(22),w=function(e){function t(e){var r;return Object(l.a)(this,t),(r=Object(m.a)(this,Object(h.a)(t).call(this,e))).state={data:[],categories:null},r}return Object(d.a)(t,e),Object(p.a)(t,[{key:"getValidCategories",value:function(e){return e.filter(function(e){return e.startsWith("cat-")}).map(function(e){return e.substr(4)})}},{key:"componentDidMount",value:function(){var e=Object(u.a)(i.a.mark(function e(){var t,r,a,n,o,s,c,u;return i.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,g("alexytsu");case 2:for(t=e.sent,r=!0,a=!1,n=void 0,e.prev=6,o=t[Symbol.iterator]();!(r=(s=o.next()).done);r=!0)(c=s.value).tag=this.getValidCategories(c.topics);e.next=14;break;case 10:e.prev=10,e.t0=e.catch(6),a=!0,n=e.t0;case 14:e.prev=14,e.prev=15,r||null==o.return||o.return();case 17:if(e.prev=17,!a){e.next=20;break}throw n;case 20:return e.finish(17);case 21:return e.finish(14);case 22:u=E.groupBy(t,function(e){return e.tag}),this.setState({data:t}),this.setState({categories:u});case 25:case"end":return e.stop()}},e,this,[[6,10,14,22],[15,,17,21]])}));return function(){return e.apply(this,arguments)}}()},{key:"render",value:function(){var e=this.state.categories,t=[];for(var r in e){var a=e[r];t.push(n.a.createElement(v,{name:r,repos:a}))}return n.a.createElement("div",{className:"App"},n.a.createElement("div",{className:"header"},n.a.createElement("h1",null,"Group Repos on GitHub")),n.a.createElement("div",{className:"skinny"},n.a.createElement("div",{className:"intro"},n.a.createElement("p",null,'GitHub doesn\'t support grouping of repositories but I like to keep things organised. Uses data pulled from the GitHub API. Repos are "categorised" by adding a ',n.a.createElement("em",null,"tag"),' on GitHub in the format "cat-',n.a.createElement("em",null,"category"),'"')),t))}}]),t}(a.Component);Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));s.a.render(n.a.createElement(w,null),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[11,1,2]]]);
//# sourceMappingURL=main.cb38c103.chunk.js.map