(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{11:function(e,t,n){e.exports=n(24)},16:function(e,t,n){},19:function(e,t,n){},20:function(e,t,n){},21:function(e,t,n){},24:function(e,t,n){"use strict";n.r(t);var r=n(0),a=n.n(r),o=n(5),s=n.n(o),i=(n(16),n(1)),c=n.n(i),u=n(2),l=n(6),p=n(7),m=n(9),h=n(8),d=n(10);n(19),n(20);function f(e){var t=e.repo;return a.a.createElement("div",{className:"repository_row"},a.a.createElement("div",{className:"repository_name"},t.name),a.a.createElement("div",{className:"repository_description"},t.description),a.a.createElement("div",{className:"repository_link"},a.a.createElement("a",{href:t.html_url},"Link")))}n(21);function v(e){var t=[];console.log("Props.repos",e.repos);for(var n=0;n<e.repos.length;n++){var r=e.repos[n];t.push(a.a.createElement(f,{repo:r}))}return a.a.createElement("div",{className:"card"},a.a.createElement("h2",null,e.name),t)}function g(e){return b.apply(this,arguments)}function b(){return(b=Object(u.a)(c.a.mark(function e(t){var n,r;return c.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,fetch("https://api.github.com/users/".concat(t,"/repos"),{headers:{Accept:"application/vnd.github.mercy-preview+json"}});case 2:return n=e.sent,e.next=5,n.json();case 5:return r=e.sent,e.abrupt("return",r);case 7:case"end":return e.stop()}},e)}))).apply(this,arguments)}var w=n(22),y=function(e){function t(e){var n;return Object(l.a)(this,t),(n=Object(m.a)(this,Object(h.a)(t).call(this,e))).state={data:[],categories:null},n}return Object(d.a)(t,e),Object(p.a)(t,[{key:"getValidCategories",value:function(e){return e.filter(function(e){return e.startsWith("cat-")}).map(function(e){return e.substr(4)})}},{key:"componentDidMount",value:function(){var e=Object(u.a)(c.a.mark(function e(){var t,n,r,a,o,s,i,u;return c.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,g("alexytsu");case 2:for(t=e.sent,n=!0,r=!1,a=void 0,e.prev=6,o=t[Symbol.iterator]();!(n=(s=o.next()).done);n=!0)(i=s.value).tag=this.getValidCategories(i.topics);e.next=14;break;case 10:e.prev=10,e.t0=e.catch(6),r=!0,a=e.t0;case 14:e.prev=14,e.prev=15,n||null==o.return||o.return();case 17:if(e.prev=17,!r){e.next=20;break}throw a;case 20:return e.finish(17);case 21:return e.finish(14);case 22:u=w.groupBy(t,function(e){return e.tag}),this.setState({data:t}),this.setState({categories:u});case 25:case"end":return e.stop()}},e,this,[[6,10,14,22],[15,,17,21]])}));return function(){return e.apply(this,arguments)}}()},{key:"render",value:function(){var e=this.state.categories,t=[];for(var n in e){var r=e[n];t.push(a.a.createElement(v,{name:n,repos:r}))}return a.a.createElement("div",{className:"App"},a.a.createElement("h1",null,"Group Repos on GitHub"),a.a.createElement("div",{className:"intro"},a.a.createElement("p",null,'GitHub doesn\'t support grouping of repositories but I like to keep things organised. Uses data pulled from the GitHub API. Repos are "categorised" by adding a ',a.a.createElement("em",null,"tag"),' on GitHub in the format "cat-',a.a.createElement("em",null,"category"),'"')),t)}}]),t}(r.Component);Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));s.a.render(a.a.createElement(y,null),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[11,1,2]]]);
//# sourceMappingURL=main.992c4b3e.chunk.js.map