{"version":3,"sources":["components/Repository/Repository.js","components/CategoryGrouping/CategoryGrouping.js","api/repositories.js","components/css-reset.js","App.js","serviceWorker.js","index.js"],"names":["RepositoryLine","props","repo","Object","core_browser_esm","css","borderRadius","border","padding","color","fontWeight","&:visited","href","html_url","name","fontSize","marginTop","description","CategoryGrouping","category_rows","console","log","repos","i","length","push","marginBottom","concat","display","gridTemplateColumns","gap","@media (min-width: 480px)","getUserRepositories","_x","_getUserRepositories","apply","this","arguments","_callee","username","response","data","regenerator_default","a","wrap","_context","prev","next","fetch","headers","Accept","sent","json","abrupt","stop","CSSReset","styles","_templateObject","_","require","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","categories","topics","filter","topic","startsWith","map","t","substr","_iterator","Symbol","iterator","_iteratorNormalCompletion","_step","done","value","tag","getValidCategories","groupBy","setState","rendered_categories","category_name","css_reset","fontFamily","maxWidth","marginRight","marginLeft","Component","Boolean","window","location","hostname","match","ReactDOM","render","react_default","createElement","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a88577ef.chunk.js","sourcesContent":["/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\n\nexport default function RepositoryLine(props) {\n  const repo = props.repo;\n\n  return (\n    <div\n      css={{\n        borderRadius: 3,\n        border: \"1px solid #d1d5da\",\n        padding: 16\n      }}\n    >\n      <a\n        css={{\n          color: \"#0366d6\",\n          fontWeight: \"bolder\",\n          \"&:visited\": {\n            color: \"#0366d6\",\n            fontWeight: \"bolder\"\n          }\n        }}\n        href={repo.html_url}\n      >\n        {repo.name}\n      </a>\n      <div css={{ fontSize: 13, color: \"#4a4a4a\", marginTop: 8 }}>\n        {repo.description}\n      </div>\n    </div>\n  );\n}\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport Repository from \"../Repository/Repository\";\n\nexport default function CategoryGrouping(props) {\n  var category_rows = [];\n  console.log(\"Props.repos\", props.repos);\n  for (let i = 0; i < props.repos.length; i++) {\n    var repo = props.repos[i];\n    category_rows.push(<Repository repo={repo} />);\n  }\n\n  return (\n    <div css={{ marginTop: 24 }}>\n      <h2\n        css={{\n          fontSize: 20,\n          marginBottom: 8,\n          fontWeight: \"bolder\",\n          color: \"#4a4a4a\"\n        }}\n      >\n        {props.name ? `# ${props.name}` : \"Uncategorised\"}\n      </h2>\n      <div\n        css={{\n          display: \"grid\",\n          gridTemplateColumns: \"1fr\",\n          gap: 8,\n          \"@media (min-width: 480px)\": {\n            gridTemplateColumns: \"1fr 1fr\"\n          }\n        }}\n      >\n        {category_rows}\n      </div>\n    </div>\n  );\n}\n","export async function getUserRepositories(username) {\n  let response = await fetch(`https://api.github.com/users/${username}/repos`, {\n    headers: {\n      Accept: \"application/vnd.github.mercy-preview+json\"\n    }\n  });\n  let data = await response.json();\n  return  data;\n}\n","/** @jsx jsx */\nimport { jsx, Global, css } from \"@emotion/core\";\n\nconst CSSReset = () => (\n  <Global\n    styles={css`\n      html,\n      body,\n      div,\n      span,\n      applet,\n      object,\n      iframe,\n      h1,\n      h2,\n      h3,\n      h4,\n      h5,\n      h6,\n      p,\n      blockquote,\n      pre,\n      a,\n      abbr,\n      acronym,\n      address,\n      big,\n      cite,\n      code,\n      del,\n      dfn,\n      em,\n      img,\n      ins,\n      kbd,\n      q,\n      s,\n      samp,\n      small,\n      strike,\n      strong,\n      sub,\n      sup,\n      tt,\n      var,\n      b,\n      u,\n      i,\n      center,\n      dl,\n      dt,\n      dd,\n      ol,\n      ul,\n      li,\n      fieldset,\n      form,\n      label,\n      legend,\n      table,\n      caption,\n      tbody,\n      tfoot,\n      thead,\n      tr,\n      th,\n      td,\n      article,\n      aside,\n      canvas,\n      details,\n      embed,\n      figure,\n      figcaption,\n      footer,\n      header,\n      hgroup,\n      menu,\n      nav,\n      output,\n      ruby,\n      section,\n      summary,\n      time,\n      mark,\n      audio,\n      video {\n        margin: 0;\n        padding: 0;\n        border: 0;\n        font-size: 100%;\n        font: inherit;\n        vertical-align: baseline;\n      }\n\n      :focus {\n        outline: 0;\n      }\n\n      article,\n      aside,\n      details,\n      figcaption,\n      figure,\n      footer,\n      header,\n      hgroup,\n      menu,\n      nav,\n      section {\n        display: block;\n      }\n\n      body {\n        line-height: 1;\n      }\n\n      ol,\n      ul {\n        list-style: none;\n      }\n\n      blockquote,\n      q {\n        quotes: none;\n      }\n\n      blockquote:before,\n      blockquote:after,\n      q:before,\n      q:after {\n        content: \"\";\n        content: none;\n      }\n\n      table {\n        border-collapse: collapse;\n        border-spacing: 0;\n      }\n\n      input[type=\"search\"]::-webkit-search-cancel-button,\n      input[type=\"search\"]::-webkit-search-decoration,\n      input[type=\"search\"]::-webkit-search-results-button,\n      input[type=\"search\"]::-webkit-search-results-decoration {\n        -webkit-appearance: none;\n        -moz-appearance: none;\n      }\n\n      input[type=\"search\"] {\n        -webkit-appearance: none;\n        -moz-appearance: none;\n        -webkit-box-sizing: content-box;\n        -moz-box-sizing: content-box;\n        box-sizing: content-box;\n      }\n\n      textarea {\n        overflow: auto;\n        vertical-align: top;\n        resize: vertical;\n      }\n\n      audio,\n      canvas,\n      video {\n        display: inline-block;\n        *display: inline;\n        *zoom: 1;\n        max-width: 100%;\n      }\n\n      audio:not([controls]) {\n        display: none;\n        height: 0;\n      }\n\n      [hidden] {\n        display: none;\n      }\n\n      html {\n        font-size: 100%; /* 1 */\n        -webkit-text-size-adjust: 100%; /* 2 */\n        -ms-text-size-adjust: 100%; /* 2 */\n      }\n\n      a:focus {\n        outline: thin dotted;\n      }\n\n      a:active,\n      a:hover {\n        outline: 0;\n      }\n\n      a,\n      a:visited,\n      a:active,\n      a:hover {\n        text-decoration: none;\n        color: black;\n      }\n\n      img {\n        border: 0; /* 1 */\n        -ms-interpolation-mode: bicubic; /* 2 */\n      }\n\n      figure {\n        margin: 0;\n      }\n\n      form {\n        margin: 0;\n      }\n\n      fieldset {\n        border: 1px solid #c0c0c0;\n        margin: 0 2px;\n        padding: 0.35em 0.625em 0.75em;\n      }\n\n      legend {\n        border: 0; /* 1 */\n        padding: 0;\n        white-space: normal; /* 2 */\n        *margin-left: -7px; /* 3 */\n      }\n\n      button,\n      input,\n      select,\n      textarea {\n        font-size: 100%; /* 1 */\n        margin: 0; /* 2 */\n        vertical-align: baseline; /* 3 */\n        *vertical-align: middle; /* 3 */\n      }\n\n      button,\n      input {\n        line-height: normal;\n      }\n\n      button,\n      select {\n        text-transform: none;\n      }\n\n      button,\n      html input[type=\"button\"],\n      input[type=\"reset\"],\n      input[type=\"submit\"] {\n        -webkit-appearance: button;\n        cursor: pointer;\n        *overflow: visible;\n      }\n      button[disabled],\n      html input[disabled] {\n        cursor: default;\n      }\n\n      input[type=\"checkbox\"],\n      input[type=\"radio\"] {\n        box-sizing: border-box; /* 1 */\n        padding: 0; /* 2 */\n        *height: 13px; /* 3 */\n        *width: 13px; /* 3 */\n      }\n\n      input[type=\"search\"] {\n        -webkit-appearance: textfield; /* 1 */\n        -moz-box-sizing: content-box;\n        -webkit-box-sizing: content-box; /* 2 */\n        box-sizing: content-box;\n      }\n\n      input[type=\"search\"]::-webkit-search-cancel-button,\n      input[type=\"search\"]::-webkit-search-decoration {\n        -webkit-appearance: none;\n      }\n\n      button::-moz-focus-inner,\n      input::-moz-focus-inner {\n        border: 0;\n        padding: 0;\n      }\n\n      textarea {\n        overflow: auto;\n        vertical-align: top;\n      }\n\n      table {\n        border-collapse: collapse;\n        border-spacing: 0;\n      }\n\n      html,\n      button,\n      input,\n      select,\n      textarea {\n        color: #222;\n      }\n\n      ::-moz-selection {\n        background: #b3d4fc;\n        text-shadow: none;\n      }\n\n      ::selection {\n        background: #b3d4fc;\n        text-shadow: none;\n      }\n\n      img {\n        vertical-align: middle;\n      }\n\n      fieldset {\n        border: 0;\n        margin: 0;\n        padding: 0;\n      }\n\n      textarea {\n        resize: vertical;\n      }\n\n      .chromeframe {\n        margin: 0.2em 0;\n        background: #ccc;\n        color: #000;\n        padding: 0.2em 0;\n      }\n    `}\n  />\n);\n\nexport default CSSReset;\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport { Component } from \"react\";\nimport CategoryGrouping from \"./components/CategoryGrouping/CategoryGrouping\";\nimport { getUserRepositories } from \"./api/repositories\";\nimport CSSReset from \"./components/css-reset\";\n\nvar _ = require(\"lodash\");\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      categories: null\n    };\n  }\n\n  /* \n    return all the GitHub topics that are being used as tags\n    topics that are tags are formatted: cat-{tag}\n  */\n  getValidCategories(topics) {\n    var tag = topics.filter(topic => topic.startsWith(\"cat-\"));\n    return tag.map(t => t.substr(4));\n  }\n\n  async componentDidMount() {\n    // get a list of every repositories for the current user\n    const data = await getUserRepositories(\"alexytsu\");\n    for (let repo of data) {\n      repo.tag = this.getValidCategories(repo.topics);\n    }\n\n    // group by tag\n    const categories = _.groupBy(data, repo => repo.tag);\n\n    this.setState({ data });\n    this.setState({ categories });\n  }\n\n  render() {\n    const categories = this.state.categories;\n    var rendered_categories = [];\n    for (let category_name in categories) {\n      var repos = categories[category_name];\n      rendered_categories.push(\n        <CategoryGrouping name={category_name} repos={repos} />\n      );\n    }\n\n    return (\n      <div>\n        <CSSReset></CSSReset>\n        <div\n          css={{\n            fontFamily: `-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif`,\n            padding: 16,\n            maxWidth: 1024,\n            marginRight: \"auto\",\n            marginLeft: \"auto\"\n          }}\n        >\n          {rendered_categories}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}